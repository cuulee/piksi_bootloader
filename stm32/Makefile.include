##
## Copyright (C) 2009 Uwe Hermann <uwe@hermann-uwe.de>
## Copyright (C) 2010 Piotr Esden-Tempski <piotr@esden.net>
## Copyright (C) 2011-2014 Swift Navigation Inc <info@swift-nav.com>
## Contact: Fergus Noble <fergus@swift-nav.com>
##
## Derived from libopenstm32 example Makefile.include
##
## This source is subject to the license found in the file 'LICENSE' which must
## be be distributed together with this source. All other rights reserved.
##
## THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
## EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
## WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
##

SWIFTNAV_ROOT ?= ..
PREFIX ?= arm-none-eabi
GIT_COMMIT := $(shell git describe --dirty --tags --always)
# PREFIX ?= arm-elf
CC = $(PREFIX)-gcc
LD = $(PREFIX)-gcc
OBJCOPY = $(PREFIX)-objcopy
OBJDUMP = $(PREFIX)-objdump

OBJS += \
	$(SWIFTNAV_ROOT)/src/board/nap/nap_common.o \
	$(SWIFTNAV_ROOT)/src/board/nap/nap_conf.o \
	$(SWIFTNAV_ROOT)/src/board/m25_flash.o \
	$(SWIFTNAV_ROOT)/src/board/leds.o \
	$(SWIFTNAV_ROOT)/src/peripherals/stm_flash.o \
	$(SWIFTNAV_ROOT)/src/peripherals/spi.o \
	$(SWIFTNAV_ROOT)/src/peripherals/usart.o \
	$(SWIFTNAV_ROOT)/src/peripherals/usart_tx.o \
	$(SWIFTNAV_ROOT)/src/peripherals/usart_rx.o \
	$(SWIFTNAV_ROOT)/src/sbp.o \
	$(SWIFTNAV_ROOT)/src/error.o \
	$(SWIFTNAV_ROOT)/src/settings.o \
	$(SWIFTNAV_ROOT)/src/flash_callbacks.o

CFLAGS += -Os -Wall -Wextra -Werror -std=gnu99 \
			    -fdata-sections -ffunction-sections \
			    -fno-common -MD -DSTM32F4 -DGIT_COMMIT="\"$(GIT_COMMIT)\"" \
			    -mcpu=cortex-m4 -march=armv7e-m -mthumb \
			    -mfloat-abi=hard -mfpu=fpv4-sp-d16

CFLAGS += -I$(SWIFTNAV_ROOT)/src \
          -I$(SWIFTNAV_ROOT)/libopencm3/include \
          -I$(SWIFTNAV_ROOT)/libsbp/c/include

LDSCRIPT ?= $(SWIFTNAV_ROOT)/stm32/bootloader.ld
LDFLAGS += -lc -lnosys -T$(LDSCRIPT) -nostartfiles \
					 -Wl,-wrap,printf -Wl,--gc-sections \
					 -mcpu=cortex-m4 -march=armv7e-m -mthumb \
					 -mfloat-abi=hard -mfpu=fpv4-sp-d16 \
					 -lopencm3_stm32f4 -lsbp-static -lm \
					 -L$(SWIFTNAV_ROOT)/libopencm3/lib \
					 -L$(SWIFTNAV_ROOT)/libsbp/c/build/src


OOCD ?= openocd
OOCD_INTERFACE ?= flossjtag
OOCD_CONFIG ?= $(SWIFTNAV_ROOT)/stm32/swiftnav.cfg

# Be silent per default, but 'make V=1' will show all compiler calls.
ifneq ($(V),1)
Q := @
NULL := 2>/dev/null
else
LDFLAGS += -Wl,--print-gc-sections
endif

.SUFFIXES: .elf .bin .hex .srec .list .images
.SECONDEXPANSION:
.SECONDARY:

all: images

images: $(BINARY).images
flash: $(BINARY).flash

%.images: %.bin %.hex %.srec %.list
	@echo "*** $* images generated ***"

%.bin: %.elf
	@printf "  OBJCOPY $(*).bin\n"
	$(Q)$(OBJCOPY) -Obinary $(*).elf $(*).bin

%.hex: %.elf
	@printf "  OBJCOPY $(*).hex\n"
	$(Q)$(OBJCOPY) -Oihex $(*).elf $(*).hex

%.srec: %.elf
	@printf "  OBJCOPY $(*).srec\n"
	$(Q)$(OBJCOPY) -Osrec $(*).elf $(*).srec

%.list: %.elf
	@printf "  OBJDUMP $(*).list\n"
	$(Q)$(OBJDUMP) -S $(*).elf > $(*).list

%.elf: $(OBJS)
	@printf "  LD      $(subst $(shell pwd)/,,$(@))\n"
	$(Q)$(LD) -o $(*).elf $(OBJS) -Xlinker -Map=$(*).map $(LDFLAGS)

%.o: %.c Makefile
	@printf "  CC      $(subst $(shell pwd)/,,$(@))\n"
	$(Q)$(CC) $(CFLAGS) -o $@ -c $<

clean:
	$(Q)rm -f $(OBJS)
	$(Q)rm -f $(OBJS:.o=.d)
	$(Q)rm -f *.elf
	$(Q)rm -f *.bin
	$(Q)rm -f *.hex
	$(Q)rm -f *.srec
	$(Q)rm -f *.list
	$(Q)rm -f *.map

%.flash: %.hex
	@printf "  FLASH   $<\n"
	@# IMPORTANT: Don't use "resume", only "reset" will work correctly!
	$(Q)$(OOCD) -f interface/$(OOCD_INTERFACE).cfg \
		    -f $(OOCD_CONFIG) \
		    -c "init" -c "reset halt" \
		    -c "flash write_image erase unlock $(*).hex" \
				-c "verify_image $(*).hex" \
		    -c "reset" \
		    -c "shutdown" $(NULL)

reset:
	@echo "  RESET "
	$(Q)$(OOCD) -f interface/$(OOCD_INTERFACE).cfg \
		    -f $(OOCD_CONFIG) \
		    -c "init" \
		    -c "reset" \
		    -c "shutdown" $(NULL)

ftdi_kextunload:
	sudo kextunload /System/Library/Extensions/FTDIUSBSerialDriver.kext
ftdi_kextload:
	sudo kextload /System/Library/Extensions/FTDIUSBSerialDriver.kext

.PHONY: images clean ftdi_kextload ftdi_kextunload

-include $(OBJS:.o=.d)

